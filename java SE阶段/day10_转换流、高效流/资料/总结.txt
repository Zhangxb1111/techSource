能够使用字节缓冲流读取数据到程序
	1. 创建缓冲流
	2. 调用read方法读
	3. 关
能够使用字节缓冲流写出数据到文件
	1. 创建
	2. 写入
	3. 释放
能够明确字符缓冲流的作用和基本用法
	缓冲流的作用是为其他流提供加速，因为内部有一个8 *１０２４的缓冲区
能够使用缓冲流的特殊功能
	BufferedReader： readLine，可以一次读取一行数据
	BufferedWriter： newLine，可以实现一个跨平台的换行
能够阐述编码表的意义
	字节和字符的对应关系表。
能够使用转换流读取指定编码的文本文件
	转换流的作用是可以指定编码方式进行读和写。
	
能够使用转换流写入指定编码的文本文件
能够说出打印流的特点
	1. 输出很方便。
	2. 只有输出没有输入。
能够使用序列化流写出对象到文件
	ObjectOutputStream
能够使用反序列化流读取文件到程序中
	ObjectInputStream
	
	
1. 基本的字节流（FileInputStream和FileOutputStream），可以操作字节。 如果操作中文，会有乱码
2. 基本的字符流（FileReader和FileWriter）， 可以操作字符， 这个流适合操作中文。 只能操作文本文件。	
3. 缓冲流（BufferedReader和BufferedWriter， BufferedInputStream， BufferedOutputStream）：效率高，内部有缓冲区可以加速
4. 转换流（InputStreamReader和OutputStreamWriter）： 可以指定编码进行读写
5. 序列化流（ObjectOutputStream和OutputInputStream）：可以读写对象
6. 打印流（PrintStream 和 PrintWriter）： 可以更方便的完成输出操作。
