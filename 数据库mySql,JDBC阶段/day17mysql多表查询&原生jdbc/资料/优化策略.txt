1. 在经常where条件和order by等涉及的列上添加索引
2．应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描.
3．应尽量避免在 where 子句中使用!=或<>操作符，否则引擎将放弃使用索引而进行全表扫描。
4．应尽量避免在 where 子句中使用or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描
如：select id from t where num=10 or num=20
应该为：
select id from t where num=10
 union all 
select id from t where num=20

5．in 和 not in 也要慎用，否则会导致全表扫描
如：select id from t where num in(1,2,3) 
对于连续的数值，能用 between 就不要用 in 了
应该为:
select id from t where num between 1 and 3

6．下面的查询也将导致全表扫描：
select id from t where name like '李%'
若要提高效率，可以考虑全文检索。

7. 应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。
如：select id from t where num/2=100
应改为:
select id from t where num=100*2

8．不要在 where 子句中的“=”左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。

9．索引并不是越多越好
索引固然可 以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有必要。

10．尽量使用数字型字段
若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。

11．任何地方都不要使用 select * from t 
用具体的字段列表代替“*”，不要返回用不到的任何字段。
12．尽量避免大事务操作，提高系统并发能力。
