redis 6.0版本后就是多线程的
redis基本操作
redis持久化（数据-rdb（存储慢 恢复快） 过程-aof（存储快 恢复慢），rdb持久化指令：save bgsave与配置（配置方式也是执行bgsave指令，bgsave指令原理是调用fork函数创建子线程））
redis持久化数据去重：aof持久化方式，将set指令放入缓存缓冲区，另外还会放入去重缓冲区，当满足条件会调用fork函数创建线程，并创建子线程，从去重缓冲区获取数据进行去重，
然后保存为.aof格式日志文件，替换之前的.aof文件。）
redis缓存穿透（数据库、缓存都不存在  布隆过滤器解决）
redis缓存击穿（一条数据，数据库存在，缓存不存在，多并发访问  分布式锁解决）
redis雪崩及应对方式（redis挂掉或大批量数据同时失效  缓存高可用集群部署可解决、优化缓存过期时间（选择合适的过期时间，避免大量key在同一时刻同时失效））
redis分布式缓存-数据一致性（延时双删：先删除缓存再更新数据库再删除缓存 ）  双写模式  失效模式 这两种都会存在脏数据，强实时性、强一致性就查数据库
redis分布式锁（Redisson框架简洁代码实现分布式锁，或原生代码，推荐LCN或开源Fescar-seata）
redis主从复制集群
redis哨兵模式集群
redis cluster高可用集群（原理：多个主从集群组成，每个主从集群外都有一个master主和多个slave从，数据插入时，先经过crc16 hash算法计算出hashcode然后
与总槽位16384进行取余，余数作为槽位，槽位全部存在于master，每个master分配全部槽位一部分，增加nodes会扩容，删除nodes会缩容）